{"version":3,"sources":["serviceWorker.js","Components/SearchBox.tsx","Components/Scroll.tsx","Components/ErrorBoundary.jsx","Components/Spinner/spinner.styles.jsx","Components/Spinner/Spinner.tsx","redux/pokemons/pokemons.types.js","containers/App.tsx","redux/pokemons/pokemons.actions.js","redux/pokemons/pokemons.reducer.js","redux/root-reducer.js","redux/store.js","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","children","style","overflow","height","ErrorBoundary","props","hasError","this","setState","React","Component","SpinnerOverlay","styled","div","SpinnerContainer","Spinner","PokemonsActionTypes","FETCH_POKEMONS_START","FETCH_POKEMONS_SUCCESS","FETCH_POKEMONS_FAILURE","SEARCH_POKEMONS","PokemonList","lazy","connect","pokemons","searchfield","Pokemons","loading","dispatch","setSearchField","text","payload","requestPokemons","fetch","res","json","results","err","useEffect","filteredPokemons","filter","Pokemon","name","toLowerCase","includes","event","target","value","fallback","INITAL_STATE","pokemonsReducer","action","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e82e91cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n\r\ninterface ISearchBoxProps {\r\n  searchChange: React.FormEventHandler<HTMLInputElement>;\r\n}\r\n\r\nconst SearchBox = ({ searchChange }: ISearchBoxProps) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Pokemon\"\r\n        onChange={searchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = ({ children }: { children: React.ReactNode }) => (\r\n  <div style={{ overflow: \"scroll\", height: \"800px\" }}>{children}</div>\r\n);\r\nexport default Scroll;\r\n","import React from \"react\";\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return \"Error\";\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from \"./spinner.styles\";\r\n\r\nconst Spinner: React.FC = () => (\r\n  <SpinnerOverlay>\r\n    <SpinnerContainer />\r\n  </SpinnerOverlay>\r\n);\r\nexport default Spinner;\r\n","const PokemonsActionTypes = {\r\n  FETCH_POKEMONS_START: \"FETCH_POKEMONS_START\",\r\n  FETCH_POKEMONS_SUCCESS: \"FETCH_POKEMONS_SUCCESS\",\r\n  FETCH_POKEMONS_FAILURE: \"FETCH_POKEMONS_FAILURE\",\r\n  SEARCH_POKEMONS: 'SEARCH_POKEMONS',\r\n};\r\n\r\nexport default PokemonsActionTypes;\r\n","import React, { Suspense, lazy, useEffect, FunctionComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundary from \"../Components/ErrorBoundary\";\r\nimport Spinner from \"../Components/Spinner/Spinner\";\r\nimport \"./app.css\";\r\nimport {\r\n  setSearchField,\r\n  requestPokemons,\r\n} from \"../redux/pokemons/pokemons.actions\";\r\nconst PokemonList = lazy(() => import(\"../Components/CardList\"));\r\n\r\nexport interface IRobot {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\ninterface IAppProps {\r\n  Pokemons: Array<{ name: string; url: string }>;\r\n  searchfield: string;\r\n  loading: boolean;\r\n  setSearchField: (text: string) => void;\r\n  requestPokemons: () => void;\r\n}\r\n\r\nconst App: FunctionComponent<IAppProps> = ({\r\n  searchfield,\r\n  Pokemons,\r\n  setSearchField,\r\n  requestPokemons,\r\n  loading,\r\n}) => {\r\n  const onSearchChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPokemons();\r\n  }, [requestPokemons]);\r\n\r\n  const filteredPokemons = Pokemons.filter((Pokemon) => {\r\n    return Pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  });\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">Pokedex</h1>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <Suspense fallback={<Spinner />}>\r\n              <PokemonList Pokemons={filteredPokemons} />\r\n            </Suspense>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  setSearchField: (text: string) => dispatch(setSearchField(text)),\r\n  requestPokemons: () => dispatch(requestPokemons()),\r\n});\r\n\r\nconst mapStateToProps = ({ pokemons }: { pokemons: any }) => ({\r\n  searchfield: pokemons.searchfield,\r\n  Pokemons: pokemons.Pokemons,\r\n  loading: pokemons.loading,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import PokemonsActionTypes from \"./pokemons.types\";\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: PokemonsActionTypes.SEARCH_POKEMONS,\r\n  payload: text,\r\n});\r\n\r\nexport const requestPokemons = () => (dispatch) => {\r\n  dispatch({ type: PokemonsActionTypes.FETCH_POKEMONS_START });\r\n  fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=807&offset=0\")\r\n    .then((res) => res.json())\r\n    .then(({ results }) => {\r\n      dispatch({\r\n        type: PokemonsActionTypes.FETCH_POKEMONS_SUCCESS,\r\n        payload: results,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: PokemonsActionTypes.FETCH_POKEMONS_FAILURE,\r\n        payload: err,\r\n      })\r\n    );\r\n};\r\n","import PokemonsActionTypes from \"./pokemons.types\";\r\n\r\nconst INITAL_STATE = {\r\n  Pokemons: [],\r\n  searchfield: \"\",\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\nconst pokemonsReducer = (state = INITAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case PokemonsActionTypes.SEARCH_POKEMONS:\r\n      return {\r\n        ...state,\r\n        searchfield: action.payload,\r\n      };\r\n    case PokemonsActionTypes.FETCH_POKEMONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        Pokemons: action.payload,\r\n        loading: false,\r\n      };\r\n    case PokemonsActionTypes.FETCH_POKEMONS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default pokemonsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport pokemonsReducer from \"./pokemons/pokemons.reducer\";\r\nconst rootReducer = combineReducers({\r\n  pokemons: pokemonsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"tachyons\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}